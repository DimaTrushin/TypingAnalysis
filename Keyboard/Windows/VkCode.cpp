#include "VkCode.h"

namespace NSApplication {
namespace NSKeyboard {
namespace NSWindows {

const char* getName(CVKCode Code) {
  switch (Code) {

  case 0x00:
    return "FirstCode";

  case 0x01:
    return "LeftMouseButton";
  case 0x02:
    return "RightMouseButton";
  case 0x03:
    return "Cancel";
  case 0x04:
    return "MiddleMouseButton";
  case 0x05:
    return "X1MouseButton";
  case 0x06:
    return "X2MouseButton";
  case 0x08:
    return "Backspace";
  case 0x09:
    return "Tab";
  case 0x0c:
    return "Clear";
  case 0x0d:
    return "Enter";
  case 0x10:
    return "Shift";
  case 0x11:
    return "Ctrl";
  case 0x12:
    return "Alt";
  case 0x13:
    return "Pause";
  case 0x14:
    return "Capslock";
  case 0x15:
    return "IMEKanaMode";
  case 0x17:
    return "IMEJunjaMode";
  case 0x18:
    return "IMEFinalMode";
  case 0x19:
    return "IMEHanjaMode";
  case 0x1b:
    return "Esc";
  case 0x1c:
    return "IMEConvert";
  case 0x1d:
    return "IMENonConvert";
  case 0x1e:
    return "IMEAccept";
  case 0x1f:
    return "IMEModeChange";
  case 0x20:
    return "Spacebar";
  case 0x21:
    return "PageUp";
  case 0x22:
    return "PageDown";
  case 0x23:
    return "End";
  case 0x24:
    return "Home";
  case 0x25:
    return "LeftArrow";
  case 0x26:
    return "UpArrow";
  case 0x27:
    return "RightArrow";
  case 0x28:
    return "DownArrow";
  case 0x29:
    return "Select";
  case 0x2a:
    return "Print";
  case 0x2b:
    return "Execute";
  case 0x2c:
    return "PrintScreen";
  case 0x2d:
    return "Insert";
  case 0x2e:
    return "Delete";
  case 0x2f:
    return "Help";
  case 0x30:
    return "VK_0";
  case 0x31:
    return "VK_1";
  case 0x32:
    return "VK_2";
  case 0x33:
    return "VK_3";
  case 0x34:
    return "VK_4";
  case 0x35:
    return "VK_5";
  case 0x36:
    return "VK_6";
  case 0x37:
    return "VK_7";
  case 0x38:
    return "VK_8";
  case 0x39:
    return "VK_9";
  case 0x41:
    return "A";
  case 0x42:
    return "B";
  case 0x43:
    return "C";
  case 0x44:
    return "D";
  case 0x45:
    return "E";
  case 0x46:
    return "F";
  case 0x47:
    return "G";
  case 0x48:
    return "H";
  case 0x49:
    return "I";
  case 0x4a:
    return "J";
  case 0x4b:
    return "K";
  case 0x4c:
    return "L";
  case 0x4d:
    return "M";
  case 0x4e:
    return "N";
  case 0x4f:
    return "O";
  case 0x50:
    return "P";
  case 0x51:
    return "Q";
  case 0x52:
    return "R";
  case 0x53:
    return "S";
  case 0x54:
    return "T";
  case 0x55:
    return "U";
  case 0x56:
    return "V";
  case 0x57:
    return "W";
  case 0x58:
    return "X";
  case 0x59:
    return "Y";
  case 0x5a:
    return "Z";
  case 0x5b:
    return "LeftWin";
  case 0x5c:
    return "RightWin";
  case 0x5d:
    return "Applications";
  case 0x5f:
    return "Sleep";
  case 0x60:
    return "Numpad_0";
  case 0x61:
    return "Numpad_1";
  case 0x62:
    return "Numpad_2";
  case 0x63:
    return "Numpad_3";
  case 0x64:
    return "Numpad_4";
  case 0x65:
    return "Numpad_5";
  case 0x66:
    return "Numpad_6";
  case 0x67:
    return "Numpad_7";
  case 0x68:
    return "Numpad_8";
  case 0x69:
    return "Numpad_9";
  case 0x6a:
    return "Multiply";
  case 0x6b:
    return "Add";
  case 0x6c:
    return "Separator";
  case 0x6d:
    return "Subtract";
  case 0x6e:
    return "Decimal";
  case 0x6f:
    return "Divide";
  case 0x70:
    return "F1";
  case 0x71:
    return "F2";
  case 0x72:
    return "F3";
  case 0x73:
    return "F4";
  case 0x74:
    return "F5";
  case 0x75:
    return "F6";
  case 0x76:
    return "F7";
  case 0x77:
    return "F8";
  case 0x78:
    return "F9";
  case 0x79:
    return "F10";
  case 0x7a:
    return "F11";
  case 0x7b:
    return "F12";
  case 0x7c:
    return "F13";
  case 0x7d:
    return "F14";
  case 0x7e:
    return "F15";
  case 0x7f:
    return "F16";
  case 0x80:
    return "F17";
  case 0x81:
    return "F18";
  case 0x82:
    return "F19";
  case 0x83:
    return "F20";
  case 0x84:
    return "F21";
  case 0x85:
    return "F22";
  case 0x86:
    return "F23";
  case 0x87:
    return "F24";
  case 0x90:
    return "Numlock";
  case 0x91:
    return "Scrolllock";
  case 0x92:
    return "OEM1";
  case 0x93:
    return "OEM2";
  case 0x94:
    return "OEM3";
  case 0x95:
    return "OEM4";
  case 0x96:
    return "OEM5";
  case 0xa0:
    return "LeftShift";
  case 0xa1:
    return "RightShift";
  case 0xa2:
    return "LeftCtrl";
  case 0xa3:
    return "RightCtrl";
  case 0xa4:
    return "LeftAlt";
  case 0xa5:
    return "RightAlt";
  case 0xa6:
    return "BrowserBack";
  case 0xa7:
    return "BrowserForward";
  case 0xa8:
    return "BrowserRefresh";
  case 0xa9:
    return "BrowserStop";
  case 0xaa:
    return "BrowserSearch";
  case 0xab:
    return "BrowserFavorites";
  case 0xac:
    return "BrowserHome";
  case 0xad:
    return "VolumeMute";
  case 0xae:
    return "VolumeDown";
  case 0xaf:
    return "VolumeUp";
  case 0xb0:
    return "NextTrack";
  case 0xb1:
    return "PreviousTrack";
  case 0xb2:
    return "StopMedia";
  case 0xb3:
    return "PauseMedia";
  case 0xb4:
    return "StartMail";
  case 0xb5:
    return "SelectMedia";
  case 0xb6:
    return "StartApplication1";
  case 0xb7:
    return "StartApplication2";
  case 0xba:
    return "Eng_Semicolon";

  case 0xbb:
    return "Eng_Plus";

  case 0xbc:
    return "Eng_Comma";

  case 0xbd:
    return "Eng_Minus";

  case 0xbe:
    return "Eng_Period";

  case 0xbf:
    return "Eng_Slash_Question";

  case 0xc0:
    return "Eng_Tilde";

  case 0xdb:
    return "Eng_Left_Brace";

  case 0xdc:
    return "Eng_Backslash";

  case 0xdd:
    return "Eng_Right_Brace";

  case 0xde:
    return "Eng_Quote";

  case 0xdf:
    return "VKOEM8";
  case 0xe1:
    return "OEM_0xE1";
  case 0xe2:
    return "OEM_102";
  case 0xe3:
    return "OEM_0xE3";
  case 0xe4:
    return "OEM_0xE4";
  case 0xe5:
    return "IMEProcess";
  case 0xe6:
    return "OEM_0xE6";
  case 0xe7:
    return "VK_Packet";
  case 0xe9:
    return "OEM_0xE9";
  case 0xea:
    return "OEM_0xEA";
  case 0xeb:
    return "OEM_0xEB";
  case 0xec:
    return "OEM_0xEC";
  case 0xed:
    return "OEM_0xED";
  case 0xee:
    return "OEM_0xEE";
  case 0xef:
    return "OEM_0xEF";
  case 0xf0:
    return "OEM_0xF0";
  case 0xf1:
    return "OEM_0xF1";
  case 0xf2:
    return "OEM_0xF2";
  case 0xf3:
    return "OEM_0xF3";
  case 0xf4:
    return "OEM_0xF4";
  case 0xf5:
    return "OEM_0xF5";
  case 0xf6:
    return "Attn";
  case 0xf7:
    return "CrSel";
  case 0xf8:
    return "ExSel";
  case 0xf9:
    return "EraseEOF";
  case 0xfa:
    return "Play";
  case 0xfb:
    return "Zoom";
  case 0xfd:
    return "PA1";
  case 0xfe:
    return "OEMClear";
  case 0xff:
    return "MAX";
  default:
    return "";
  }
}

} // namespace NSWindows
} // namespace NSKeyboard
} // namespace NSApplication
